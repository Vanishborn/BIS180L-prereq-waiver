getwd()
setwd("/Users/lhr/Developer/UCD/BIS180L-prereq-waiver/")
setwd("./Assignment_01/")
getwd()
install.packages("rmarkdown")
install.packages("rmarkdown")
getwd()
setwd("../Assugnment_3/")
setwd("../Assugnment_3")
setwd("./../Assugnment_3")
setwd("./../Assignment_3")
setwd("../Assignment_3")
setwd("../Assignment_3/")
setwd("./../Assignment_3/")
getwd()
setwd(../)
setwd("./..")
getwd
getwd()
setwd("./Assignment_03/")
ls
clear()
getwd()
numbers <- 2000:20000
sum_result <- sum(numbers)
sum_result
mynum <- 1:5
sum_result <- sum(mynum)
sum_result
numbers <- 2000:20000
sum_result <- sum(numbers)
sum_result
d <- "I just want to be deleted"
d
ls() #note that you have to include the parentheses for a function even if no arguments are needed.
d <- "I just want to be deleted"
d
ls() #note that you have to include the parentheses for a function even if no arguments are needed.
rm(d)
ls()
d #generates an error because we removed it
a <- 5
b <- 2:20
a
b
sum_ab_funtion  <- sum(a, b)
sum_ab_plussign <- a + b
sum_ab_funtion
sum_ab_plussign
sum(2:20)
numbers <- 2000:20000
sum(numbers)
subset_b <- b[5:10]
sum(subset_b)
sum(b[5:10])
sum(b[3], b[8], b[10])
sum(b[5:10])
sum(b[3], b[8], b[10])
sum(b[3, 8, 10])
sum(b[c(3, 8, 10)])
sum(b[(3, 8, 10)])
sum(b[c(3,8,10)])
m <- matrix(data=1:25, ncol=5, byrow=T)
m
m[5,5]
# in the brackets, the first number is row and second number is column
m[3,]
m[,c(3,4,5)]
cbind(m,101:105)
m[,3:5] # extract the 3rd, 4th and 5th columns of m as one object
# rbind() is row bind
n <- rbind(234:240,m)
# rbind() is row bind
n <- rbind(matrix(data:234:240, ncol=6),m)
# rbind() is row bind
n <- rbind(201:205,m)
n
# rbind() is row bind
n <- rbind(123:128,m)
# rbind() is row bind
n <- rbind(26:30,m)
n
# reverse rows in matrix m
reversed_m <- m[nrow(m):1, ]
reversed_n <- rbind(26:30,reversed_m)
reversed_n
setwd("./../")
getwd()
library(tidyverse)
height_file <- read_csv("height_data_clean.csv")
View(height_file)
View(height_file)
View(height_file)
y23m01d27 <- filter(height_file, survey_date == "2023-01-27")
View(y23m01d27)
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(height.mean=mean(height_cm)) # hyp.mean is the new summary
height.mean
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(height.mean=mean(height_cm)) # hyp.mean is the new summary
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(height.mean<-mean(height_cm)) # hyp.mean is the new summary
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(height.mean = mean(height_cm), n=n()) # hyp.mean is the new summary
newthing <- y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(height.mean = mean(height_cm), n=n()) # hyp.mean is the new summary
newthing
View(newthing)
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(height.mean = mean(height_cm), n=n()) # hyp.mean is the new summary
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(height.mean = mean(height_cm), n=n()) %>%
write_csv("height_mean_by_pop.csv")
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(avg_height = mean(height_cm), n=n()) %>% # avg_height is col name
arrange(desc(avg_height))
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(avg_height = mean(height_cm), n=n()) %>% # avg_height is col name
arrange(desc(n))
n
library(tidyverse)
height_file <- read_csv("height_data_clean.csv") # read in csv file
y23m01d27 <- filter(height_file, survey_date == "2023-01-27") # date filtered
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(avg_height = mean(height_cm), n=n()) %>% # avg_height is col name
arrange(desc(n))
write_csv("height_mean_by_pop.csv")
library(tidyverse)
height_file <- read_csv("height_data_clean.csv") # read in csv file
y23m01d27 <- filter(height_file, survey_date == "2023-01-27") # date filtered
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(avg_height = mean(height_cm), n=n()) %>% # avg_height is col name
arrange(desc(n)) %>%
write_csv("height_mean_by_pop.csv")
height_file <- read_csv("height_data_clean.csv") # read in csv file
y23m01d27 <- filter(height_file, survey_date == "2023-01-27") # date filtered
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(avg_height = mean(height_cm), n=n()) %>% # avg_height is col name
arrange(desc(n)) %>%
as.data.frame() %>%
write_csv("height_mean_by_pop.csv")
library(tidyverse)
height_file <- read_csv("height_data_clean.csv") # read in csv file
y23m01d27 <- filter(height_file, survey_date == "2023-01-27") # date filtered
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(avg_height = mean(height_cm), n=n()) %>% # avg_height is col name
arrange(desc(n)) %>%
as.data.frame() %>%
write_csv("height_mean_by_pop.csv")
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(avg_height = mean(height_cm), n=n()) %>% # avg_height is col name
arrange(desc(n)) %>%
write_csv("height_mean_by_pop.csv")
```{r}
y23m01d27 %>%
group_by(pop) %>% # want to compute height for each pop
summarize(avg_height = mean(height_cm), n=n()) %>% # avg_height is col name
arrange(desc(n)) %>%
write_csv("height_mean_by_pop.csv")
library(ggplot2)
gc()
height_file <- read_csv("height_data_clean.csv") # read in csv file
View(height_file)
height_file <- height_file %>%
mutate(`Survey Date` = as.Date(`Survey Date`, format = "%Y-%m-%d"))
height_file <- height_file %>%
mutate(`survey_date` = as.Date(`survey_date`, format = "%Y-%m-%d"))
View(height_file)
ggplot(height_file, aes(x = `survey_date`, y = `height_cm`, color = pop)) +
geom_line() +
labs(x = "Survey Date", y = "Height (cm)", color = "Population") +
theme_minimal() +
theme(legend.position = "bottom")
library(tidyverse)
library(ggplot2)
height_file <- read_csv("height_data_clean.csv") # read in csv file
height_file <- height_file %>%
mutate(`survey_date` = as.Date(`survey_date`, format = "%Y-%m-%d"))
height_file_avg <- height_file %>%
group_by(`survey_date`, pop) %>%
summarise(`avg_height` = mean(`height_cm`, na.rm = TRUE), .groups = "drop")
ggplot(height_file_avg, aes(x = `survey_date`, y = `avg_height`, color = pop)) +
geom_line() +
labs(x = "Survey Date", y = "Average Height (cm)", color = "Population") +
theme_minimal() +
theme(legend.position = "bottom")
View(height_file)
View(height_file_avg)
View(height_file_avg)
library(tidyverse)
library(ggplot2)
# read in csv file
height_file <- read_csv("height_data_clean.csv")
# convert dates to actual dates
height_file <- height_file %>%
mutate(`survey_date` = as.Date(`survey_date`, format = "%Y-%m-%d"))
# create average height tibble by dates and pop
height_file_avg <- height_file %>%
group_by(`survey_date`, pop) %>%
summarise(`avg_height` = mean(`height_cm`, na.rm = TRUE), .groups = "drop")
# ggplot height against dates of each pop
ggplot(height_file_avg, aes(x = `survey_date`, y = `avg_height`, color = pop)) +
geom_line() +
labs(x = "Survey Date", y = "Average Height (cm)", color = "Population") +
theme_minimal() +
theme(legend.position = "bottom")
# Subset 2023-01-27
y23m01d27 <- height_file_avg %>%
filter(`survey_date` == as.Date("2023-01-27"))
# Boxplot of average 'Height (cm)' for each 'Pop'
ggplot(height_file_avg_subset, aes(x = Pop, y = `Avg Height (cm)`)) +
geom_boxplot() +
labs(x = "Population", y = "Average Height (cm)") +
theme_minimal() +
theme(legend.position = "bottom")
# Subset 2023-01-27
y23m01d27 <- height_file_avg %>%
filter(`survey_date` == as.Date("2023-01-27"))
# Box-plot of average height against each pop
ggplot(height_file_avg_subset, aes(x = pop, y = `avg_height`)) +
geom_boxplot() +
labs(x = "Population", y = "Average Height (cm)") +
theme_minimal() +
theme(legend.position = "bottom")
# Subset 2023-01-27
y23m01d27 <- height_file_avg %>%
filter(`survey_date` == as.Date("2023-01-27"))
# Box-plot of average height against each pop
ggplot(y23m01d27, aes(x = pop, y = `avg_height`)) +
geom_boxplot() +
labs(x = "Population", y = "Average Height (cm)") +
theme_minimal() +
theme(legend.position = "bottom")
# Subset 2023-01-27
y23m01d27 <- height_file_avg %>%
filter(`survey_date` == as.Date("2023-01-27"))
# Box-plot of average height against each pop
ggplot(y23m01d27, aes(x = pop, y = `avg_height`)) +
geom_boxplot() +
labs(x = "Population", y = "Average Height (cm)") +
theme_minimal()
# Subset 2023-01-27
y23m01d27 <- height_file_avg %>%
filter(`survey_date` == as.Date("2023-01-27"))
# Box-plot of average height against each pop
ggplot(y23m01d27, aes(x = pop, y = `avg_height`)) +
geom_boxplot() +
labs(x = "Population", y = "Average Height (cm)")
